#!/usr/bin/env bash

remove_array_dups() {
    # Usage: remove_array_dups "array"
    declare -A tmp_array

    for i in "$@"; do
        [[ $i ]] && IFS=" " tmp_array["${i:- }"]=1
    done

    printf '%s\n' "${!tmp_array[@]}"
}

INCLUDE_BASH_BIBLE=${INCLUDE_BASH_BIBLE:=no}

CHEATSHEETS_DIR=$(dirname "$0")

# associative array that will keep track of file scores
# when a keyword matches a file (either in name or "KEYWORD" content), the file's score is increased
declare -A results

# shellcheck disable=SC2162
read -a keywords <<< "${1}"

FIND_EXCLUDE=""
GREP_EXCLUDE=""

if [[ "${INCLUDE_BASH_BIBLE}" != "yes" ]]; then
    FIND_EXCLUDE="${FIND_EXCLUDE} -path ${CHEATSHEETS_DIR}/bash-bible -prune"
    GREP_EXCLUDE="${GREP_EXCLUDE} --exclude-dir=bash-bible"
fi

# print all cheatsheets when no keyword is provided
if [[ "${#keywords}" -eq 0 ]]; then
    if [[ -z "${FIND_EXCLUDE}" ]]; then
        # shellcheck disable=SC2207,SC2086
        find ${CHEATSHEETS_DIR} -iname "*.chsht.*" -exec sh -c 'basename ${0#./}' {} \;
    else
        # shellcheck disable=SC2207,SC2086
        find ${CHEATSHEETS_DIR} \( ${FIND_EXCLUDE} \) -o -iname "*.chsht.*" -exec sh -c 'basename ${0#./}' {} \;
    fi
    exit 0
fi

# check which files match each keyword and increment their score
for k in "${keywords[@]}" ; do    
    # search for keyword "k" in the "KEYWORDS" line of each cheatsheet
    # result: array of file names that matches this keyword
    # shellcheck disable=SC2207,SC2086
    content_results=( $(grep -l -r -E "KEYWORDS: .*${k}" --include=\*.chsht.\* ${GREP_EXCLUDE} ${CHEATSHEETS_DIR}) )

    # also search for keyword "k" in the name of the cheatsheet
    # result: array of file names that matches this keyword
    # the last part of the command removes the leading "./" before each result

    if [[ -z "${FIND_EXCLUDE}" ]]; then
        # search in the file names
        # shellcheck disable=SC2207,SC2086
        filename_results=( $(find ${CHEATSHEETS_DIR} -iname "*${k}*.chsht.*" -exec sh -c 'echo ${0#./}' {} \;) )
        # shellcheck disable=SC2207,SC2086
        foldername_results=( $(find ${CHEATSHEETS_DIR} -path "**/*${k}*" -iname "*.chsht.*" -exec sh -c 'echo ${0#./}' {} \;) )
    else
        # shellcheck disable=SC2207,SC2086
        filename_results=( $(find ${CHEATSHEETS_DIR} \( ${FIND_EXCLUDE} \) -o -iname "*${k}*.chsht.*" -exec sh -c 'echo ${0#./}' {} \;) )
        # shellcheck disable=SC2207,SC2086
        foldername_results=( $(find ${CHEATSHEETS_DIR} \( ${FIND_EXCLUDE} \) -o -path "**/*${k}*" -iname "*.chsht.*" -exec sh -c 'echo ${0#./}' {} \;) )
    fi

    mapfile -t search_results < <(remove_array_dups "${content_results[@]}" "${foldername_results[@]}" "${filename_results[@]}")

    # for each file matched, increment its "score" in the global search
    for r in "${search_results[@]}"; do
        # update the current result's score (file's score)
        if [[ ! -v results["${r}"] ]] ; then
            results["${r}"]=1
        else
            results["${r}"]=$(( ${results["${r}"]} + 1 ))
        fi
    done
done

# only print the results containing the maximum keywords

max=0
for key in "${!results[@]}"; do
    if [[ $max -lt ${results["${key}"]} ]]; then
        max=${results["${key}"]}
    fi
done

for key in "${!results[@]}"; do
    if [[ ${results["${key}"]} -eq $max ]]; then
        basename "$key"
    fi
done

# echo "grep -l -r -E ${search_option} --include=\*.chsht.\*"
# grep -l -r -E "${search_option}" --include=\*.chsht.\*
