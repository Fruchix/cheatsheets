#!/bin/bash

# associative array that will keep track of file scores
# when a keyword matches a file (either in name or "KEYWORD" content), the file's score is increased
declare -A results

read -a keywords <<< "${1}"

# check which files match each keyword and increment their score
for k in "${keywords[@]}" ""; do
    # search for keyword "k" in the "KEYWORDS" line of each cheatsheet
    # result: array of file names that matches this keyword
    content_results=( $(grep -l -r -E "KEYWORDS: .*${k}" --include=\*.chsht.\*) )

    # also search for keyword "k" in the name of the cheatsheet
    # result: array of file names that matches this keyword
    # the last part of the command removes the leading "./" before each result
    filename_results=( $(find . -iname "*${k}*.chsht.*" -exec sh -c 'echo ${0#./}' {} \;) )

    # index of the content's results
    i=0

    # for each file matched, increment its "score" in the global search
    for r in "${content_results[@]}" "${filename_results[@]}"; do
        # if keyword was found in both filename and file content,
        # do not add it to the results
        if [[ "$i" -lt "${#content_results[@]}" && "${filename_results[*]}" =~ ${r} ]]; then
            i=$(( i + 1))
            continue
        fi

        # update the current result's score (file's score)
        if [[ ! -v results["${r}"] ]] ; then
            results["${r}"]=0
        else
            results["${r}"]=$(( ${results["${r}"]} + 1 ))
        fi
    done
done

# only print the results containing the maximum keywords

max=0
for key in "${!results[@]}"; do
    if [[ $max -lt ${results["${key}"]} ]]; then
        max=${results["${key}"]}
    fi
done

for key in "${!results[@]}"; do
    if [[ ${results["${key}"]} -eq $max  ]]; then
        echo "$key"
    fi
done

# echo "grep -l -r -E ${search_option} --include=\*.chsht.\*"
# grep -l -r -E "${search_option}" --include=\*.chsht.\*
